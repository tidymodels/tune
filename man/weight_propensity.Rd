% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weight_propensity.R
\name{weight_propensity}
\alias{weight_propensity}
\alias{weight_propensity.tune_results}
\title{Helper for bridging two-stage causal fits}
\usage{
\method{weight_propensity}{tune_results}(object, wt_fn, ...)
}
\arguments{
\item{object}{The object containing the model fit(s) that will generate
predictions used to calculate propensity weights. Currently, either a
\link[parsnip:fit.model_spec]{parsnip model fit}, fitted
\link[workflows:workflow]{workflow}, or
tuning results (\code{?tune::fit_resamples}) object. If a tuning result, the
object must have been generated with the control argument
(\code{?tune::control_resamples}) \code{extract = identity}.}

\item{wt_fn}{A function used to calculate the propensity weights. The first
argument gives the predicted probability of exposure, the true value for
which is provided in the second argument. See \code{?propensity::wt_ate()} for
an example.}

\item{...}{Additional arguments passed to \code{wt_fn}.}
}
\value{
For \code{model_fit} and fitted \code{workflow} input, a modified version of the data
set supplied in \code{data} that contains a \code{.wts} column with class
\code{importance_weights}. For \code{tune_results} input, a modified version of the
resampling object underlying the tuning results containing a new \code{.wts} column
with propensity values corresponding to each element of the analysis set.
}
\description{
\code{weight_propensity()} is a helper function to more easily link the
propensity and outcome models in causal workflows. In the case of a
single model fit, as with \code{model_fit}s or \code{workflow}s, the function
is roughly analogous to an \code{augment()} method that additionally takes in
a propensity weighting function. For \code{tune_results}, the method carries
out this same augment-adjacent procedure on the training data underlying
the resampling object for each element of the analysis set.
}
\examples{
\dontshow{if (tune:::should_run_examples(suggests = "modeldata")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# load needed packages
library(modeldata)
library(parsnip)
library(workflows)
library(rsample)

library(ggplot2)
library(dplyr)
library(purrr)

# example data: model causal estimate for `Class`
two_class_dat <- two_class_dat[1:250,]
two_class_dat

# see `propensity::wt_ate()` for a more realistic example
# of a propensity weighting function
silly_wt_fn <- function(.propensity, .exposure = NULL, ...) {
  .propensity
}

propensity_wf <- workflow(Class ~ B, logistic_reg())
outcome_wf <- workflow(A ~ Class, linear_reg()) \%>\% add_case_weights(.wts)

# single model --------------------------------------------------------------
propensity_fit <- fit(propensity_wf, two_class_dat)

two_class_weighted <-
  weight_propensity(propensity_fit, silly_wt_fn, data = two_class_dat)

two_class_weighted

outcome_fit <- fit(outcome_wf, two_class_weighted)

outcome_fit \%>\% extract_fit_engine() \%>\% coef()

# resampled model -----------------------------------------------------------
set.seed(1)
boots <- bootstraps(two_class_dat[1:250,], times = 100)

res_tm <-
  # fit the propensity model to resamples
  fit_resamples(
    propensity_wf,
    resamples = boots,
    # note `extract = identity` rather than `extract`
    control = control_resamples(extract = identity)
  ) \%>\%
  # determine weights for outcome model based on
  # propensity model's predictions
  weight_propensity(silly_wt_fn) \%>\%
  # fit outcome workflow using generated `.wts`
  fit_resamples(
    outcome_wf,
    resamples = .,
    # would usually `extract = tidy` here
    control = control_resamples(extract = identity)
  )

# extracts contain the properly resampled fitted workflows:
collect_extracts(res_tm)

# plot the properly resampled distribution of estimates:
collect_extracts(res_tm) \%>\%
  pull(.extracts) \%>\%
  map(extract_fit_engine) \%>\%
  map(coef) \%>\%
  bind_rows() \%>\%
  ggplot() +
  aes(x = ClassClass2) +
  geom_histogram()
\dontshow{\}) # examplesIf}
}
\references{
Barrett M & D'Agostino McGowan L (forthcoming).
\emph{Causal Inference in R}. \url{https://www.r-causal.org/}
}
